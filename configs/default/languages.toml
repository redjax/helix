use-grammars = { except = ["wren", "gemini"] }

[language-server]
bash-language-server = { command = "bash-language-server", args = ["start"] }
bicep-langserver = { command = "bicep-langserver" }
cs = { command = "cs", args = [
    "launch",
    "--contrib",
    "smithy-language-server",
    "--",
    "0",
] }
csharp-ls = { command = "csharp-ls" }
docker-langserver = { command = "docker-langserver", args = ["--stdio"] }
docker-compose-langserver = { command = "docker-compose-langserver", args = [
    "--stdio",
] }
graphql-language-service = { command = "graphql-lsp", args = [
    "server",
    "-m",
    "stream",
] }
jedi = { command = "jedi-language-server" }
markdoc-ls = { command = "markdoc-ls", args = ["--stdio"] }
markdown-oxide = { command = "markdown-oxide" }
# basedpyright = { command = "basedpyright-langserver", args = ["--stdio"], config = {} }
# pylyzer = { command = "pylyzer", args = ["--server"] }
ruff = { command = "ruff", args = ["server"] }
terraform-ls = { command = "terraform-ls", args = ["serve"] }
vscode-css-language-server = { command = "vscode-css-language-server", args = [
    "--stdio",
], config = { provideFormatter = true, css = { validate = { enable = true } } } }
vscode-html-language-server = { command = "vscode-html-language-server", args = [
    "--stdio",
], config = { provideFormatter = true } }
vscode-json-language-server = { command = "vscode-json-language-server", args = [
    "--stdio",
], config = { provideFormatter = true, json = { validate = { enable = true } } } }
yaml-language-server = { command = "yaml-language-server", args = ["--stdio"] }

[language-server.ansible-language-server]
command = "ansible-language-server"
args = ["--stdio"]

[language-server.lua-language-server]
command = "lua-language-server"

[language-server.lua-language-server.config.Lua.hint]
enable = true
arrayIndex = "Enable"
setType = true
paramName = "All"
paramType = true
await = true

[language-server.gopls]
command = "gopls"

[language-server.gopls.config.hints]
assignVariableTypes = true
compositeLiteralFields = true
constantValues = true
functionTypeParameters = true
parameterNames = true
rangeVariableTypes = true

[language-server.golangci-lint-lsp]
command = "golangci-lint-langserver"

[language-server.golangci-lint-lsp.config]
command = [
    "golangci-lint",
    "run",
    "--output.json.path=stdout",
    "--show-stats=false",
    "--issues-exit-code=1",
]

[language-server.rust-analyzer]
command = "rust-analyzer"

[language-server.rust-analyzer.config]
inlayHints.bindingModeHints.enable = false
inlayHints.closingBraceHints.minLines = 10
inlayHints.closureReturnTypeHints.enable = "with_block"
inlayHints.discriminantHints.enable = "fieldless"
inlayHints.lifetimeElisionHints.enable = "skip_trivial"
inlayHints.typeHints.hideClosureInitialization = false

[language-server.rust-analyzer.config.files]
watcher = "server"

[language-server.vscode-eslint-language-server]
command = "vscode-eslint-language-server"
args = ["--stdio"]

[language-server.vscode-eslint-language-server.config]
validate = "on"
experimental = { useFlatConfig = false }
rulesCustomizations = []
run = "onType"
problems = { shortenToSingleLine = false }
nodePath = ""

[language-server.vscode-eslint-language-server.config.codeAction.disableRuleComment]
enable = true
location = "separateLine"

[language-server.vscode-eslint-language-server.config.codeAction.showDocumentation]
enable = true

[language-server.vscode-eslint-language-server.config.workingDirectory]
mode = "location"

[[language]]
name = "rust"
scope = "source.rust"
injection-regex = "rs|rust"
file-types = ["rs"]
roots = ["Cargo.toml", "Cargo.lock"]
shebangs = ["rust-script", "cargo"]
auto-format = true
comment-tokens = ["//", "///", "//!"]
block-comment-tokens = [
    { start = "/*", end = "*/" },
    { start = "/**", end = "*/" },
    { start = "/*!", end = "*/" },
]
language-servers = ["rust-analyzer"]
indent = { tab-width = 4, unit = "    " }
persistent-diagnostic-sources = ["rustc", "clippy"]

[language.auto-pairs]
'(' = ')'
'{' = '}'
'[' = ']'
'"' = '"'
'`' = '`'

[language.debugger]
name = "lldb-dap"
transport = "stdio"
command = "lldb-dap"

[[language.debugger.templates]]
name = "binary"
request = "launch"
completion = [{ name = "binary", completion = "filename" }]
args = { program = "{0}" }

[[language.debugger.templates]]
name = "binary (terminal)"
request = "launch"
completion = [{ name = "binary", completion = "filename" }]
args = { program = "{0}", runInTerminal = true }

[[language.debugger.templates]]
name = "attach"
request = "attach"
completion = ["pid"]
args = { pid = "{0}" }

[[language.debugger.templates]]
name = "gdbserver attach"
request = "attach"
completion = [
    { name = "lldb connect url", default = "connect://localhost:3333" },
    { name = "file", completion = "filename" },
    "pid",
]
args = { attachCommands = [
    "platform select remote-gdb-server",
    "platform connect {0}",
    "file {1}",
    "attach {2}",
] }

[[grammar]]
name = "rust"
source = { git = "https://github.com/tree-sitter/tree-sitter-rust", rev = "1f63b33efee17e833e0ea29266dd3d713e27e321" }

[[language]]
name = "toml"
scope = "source.toml"
injection-regex = "toml"
file-types = [
    "toml",
    { glob = "pdm.lock" },
    { glob = "poetry.lock" },
    { glob = "Cargo.lock" },
    { glob = "uv.lock" },
]
comment-token = "#"
language-servers = ["taplo"]
indent = { tab-width = 2, unit = "  " }

[[grammar]]
name = "toml"
source = { git = "https://github.com/ikatyang/tree-sitter-toml", rev = "7cff70bbcbbc62001b465603ca1ea88edd668704" }

[[language]]
name = "json"
scope = "source.json"
injection-regex = "json"
file-types = [
    "json",
    "arb",
    "ipynb",
    "geojson",
    "gltf",
    "webmanifest",
    { glob = "flake.lock" },
    { glob = ".babelrc" },
    { glob = ".bowerrc" },
    { glob = ".jscrc" },
    "js.map",
    "ts.map",
    "css.map",
    { glob = ".jslintrc" },
    "jsonl",
    "jsonld",
    { glob = ".vuerc" },
    { glob = "composer.lock" },
    { glob = ".watchmanconfig" },
    "avsc",
    "ldtk",
    "ldtkl",
    { glob = ".swift-format" },
    "sublime-build",
    "sublime-color-scheme",
    "sublime-commands",
    "sublime-completions",
    "sublime-keymap",
    "sublime-macro",
    "sublime-menu",
    "sublime-mousemap",
    "sublime-project",
    "sublime-settings",
    "sublime-theme",
    "sublime-workspace",
]
language-servers = ["vscode-json-language-server"]
auto-format = true
indent = { tab-width = 2, unit = "  " }

[[grammar]]
name = "json"
source = { git = "https://github.com/tree-sitter/tree-sitter-json", rev = "73076754005a460947cafe8e03a8cf5fa4fa2938" }

[[language]]
name = "jsonc"
scope = "source.json"
injection-regex = "jsonc"
file-types = ["jsonc", { glob = "tsconfig.json" }, { glob = "bun.lock" }]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
grammar = "json"
language-servers = ["vscode-json-language-server"]
auto-format = true
indent = { tab-width = 2, unit = "  " }

[[language]]
name = "json5"
scope = "source.json5"
injection-regex = "json5"
file-types = ["json5"]
language-servers = []
comment-token = "//"
indent = { tab-width = 4, unit = "    " }
# https://json5.org

[[grammar]]
name = "json5"
source = { git = "https://github.com/Joakker/tree-sitter-json5", rev = "c23f7a9b1ee7d45f516496b1e0e4be067264fa0d" }

[[language]]
name = "c-sharp"
scope = "source.csharp"
injection-regex = "c-?sharp"
file-types = ["cs", "csx", "cake"]
roots = ["sln", "csproj"]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { tab-width = 4, unit = "\t" }
language-servers = ["omnisharp"]

[language.debugger]
name = "netcoredbg"
transport = "tcp"
command = "netcoredbg"
args = ["--interpreter=vscode"]
port-arg = "--server={}"

[[language.debugger.templates]]
name = "launch"
request = "launch"
completion = [{ name = "path to dll", completion = "filename" }]
args = { type = "coreclr", console = "internalConsole", internalConsoleOptions = "openOnSessionStart", program = "{0}" }

[[language.debugger.templates]]
name = "attach"
request = "attach"
completion = ["pid"]
args = { processId = "{0}" }

[[grammar]]
name = "c-sharp"
source = { git = "https://github.com/tree-sitter/tree-sitter-c-sharp", rev = "b5eb5742f6a7e9438bee22ce8026d6b927be2cd7" }

[[language]]
name = "go"
scope = "source.go"
injection-regex = "go"
file-types = ["go"]
roots = ["go.work", "go.mod"]
auto-format = true
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = ["gopls", "golangci-lint-lsp"]
# TODO: gopls needs utf-8 offsets?
indent = { tab-width = 4, unit = "\t" }

[language.debugger]
name = "go"
transport = "tcp"
command = "dlv"
args = ["dap"]
port-arg = "-l 127.0.0.1:{}"

[[language.debugger.templates]]
name = "source"
request = "launch"
completion = [{ name = "entrypoint", completion = "filename", default = "." }]
args = { mode = "debug", program = "{0}" }

[[language.debugger.templates]]
name = "binary"
request = "launch"
completion = [{ name = "binary", completion = "filename" }]
args = { mode = "exec", program = "{0}" }

[[language.debugger.templates]]
name = "test"
request = "launch"
completion = [{ name = "tests", completion = "directory", default = "." }]
args = { mode = "test", program = "{0}" }

[[language.debugger.templates]]
name = "attach"
request = "attach"
completion = ["pid"]
args = { mode = "local", processId = "{0}" }

[[language.debugger.templates]]
name = "core"
request = "launch"
completion = [
    { name = "binary", completion = "filename" },
    { name = "core", completion = "filename" },
]
args = { mode = "core", program = "{0}", coreFilePath = "{1}" }

[[grammar]]
name = "go"
source = { git = "https://github.com/tree-sitter/tree-sitter-go", rev = "64457ea6b73ef5422ed1687178d4545c3e91334a" }

[[language]]
name = "gomod"
scope = "source.gomod"
injection-regex = "gomod"
file-types = [{ glob = "go.mod" }]
auto-format = true
comment-token = "//"
language-servers = ["gopls"]
indent = { tab-width = 4, unit = "\t" }

[[grammar]]
name = "gomod"
source = { git = "https://github.com/camdencheek/tree-sitter-go-mod", rev = "6efb59652d30e0e9cd5f3b3a669afd6f1a926d3c" }

[[language]]
name = "gotmpl"
scope = "source.gotmpl"
injection-regex = "gotmpl"
file-types = ["gotmpl"]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = ["gopls"]
indent = { tab-width = 2, unit = " " }

[[grammar]]
name = "gotmpl"
source = { git = "https://github.com/dannylongeuay/tree-sitter-go-template", rev = "395a33e08e69f4155156f0b90138a6c86764c979" }

[[language]]
name = "gowork"
scope = "source.gowork"
injection-regex = "gowork"
file-types = [{ glob = "go.work" }]
auto-format = true
comment-token = "//"
language-servers = ["gopls"]
indent = { tab-width = 4, unit = "\t" }

[[grammar]]
name = "gowork"
source = { git = "https://github.com/omertuc/tree-sitter-go-work", rev = "6dd9dd79fb51e9f2abc829d5e97b15015b6a8ae2" }

[[language]]
name = "javascript"
scope = "source.js"
injection-regex = "(js|javascript)"
language-id = "javascript"
file-types = [
    "js",
    "mjs",
    "cjs",
    "rules",
    "es6",
    "pac",
    { glob = ".node_repl_history" },
    { glob = "jakefile" },
]
shebangs = ["node"]
roots = ["package.json"]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = ["typescript-language-server"]
indent = { tab-width = 2, unit = "  " }

[language.debugger]
name = "node-debug2"
transport = "stdio"
# args consisting of cmd (node) and path to adapter should be added to user's configuration
quirks = { absolute-paths = true }

[[language.debugger.templates]]
name = "source"
request = "launch"
completion = [{ name = "main", completion = "filename", default = "index.js" }]
args = { program = "{0}" }

[[grammar]]
name = "javascript"
source = { git = "https://github.com/tree-sitter/tree-sitter-javascript", rev = "f772967f7b7bc7c28f845be2420a38472b16a8ee" }

[[language]]
name = "css"
scope = "source.css"
injection-regex = "css"
file-types = ["css"]
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = ["vscode-css-language-server"]
auto-format = true
indent = { tab-width = 2, unit = "  " }

[[grammar]]
name = "css"
source = { git = "https://github.com/tree-sitter/tree-sitter-css", rev = "769203d0f9abe1a9a691ac2b9fe4bb4397a73c51" }

[[language]]
name = "scss"
scope = "source.scss"
injection-regex = "scss"
file-types = ["scss"]
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = ["vscode-css-language-server"]
auto-format = true
indent = { tab-width = 2, unit = "  " }

[[grammar]]
name = "scss"
source = { git = "https://github.com/serenadeai/tree-sitter-scss", rev = "c478c6868648eff49eb04a4df90d703dc45b312a" }

[[language]]
name = "html"
scope = "text.html.basic"
injection-regex = "html"
file-types = [
    "html",
    "htm",
    "shtml",
    "xhtml",
    "xht",
    "jsp",
    "asp",
    "aspx",
    "jshtm",
    "volt",
    "rhtml",
    "cshtml",
]
block-comment-tokens = { start = "<!--", end = "-->" }
language-servers = ["vscode-html-language-server", "superhtml"]
auto-format = true
indent = { tab-width = 2, unit = "  " }

[[grammar]]
name = "html"
source = { git = "https://github.com/tree-sitter/tree-sitter-html", rev = "29f53d8f4f2335e61bf6418ab8958dac3282077a" }

[[language]]
name = "python"
scope = "source.python"
injection-regex = "py(thon)?"
file-types = [
    "py",
    "pyi",
    "py3",
    "pyw",
    "ptl",
    "rpy",
    "cpy",
    "ipy",
    "pyt",
    { glob = ".python_history" },
    { glob = ".pythonstartup" },
    { glob = ".pythonrc" },
    { glob = "*SConstruct" },
    { glob = "*SConscript" },
    { glob = "*sconstruct" },
]
shebangs = ["python", "uv"]
roots = ["pyproject.toml", "setup.py", "poetry.lock", "pyrightconfig.json"]
comment-token = "#"
language-servers = ["ruff", "jedi", "pylsp"]
# TODO: pyls needs utf-8 offsets
indent = { tab-width = 4, unit = "    " }

[[grammar]]
name = "python"
source = { git = "https://github.com/tree-sitter/tree-sitter-python", rev = "4bfdd9033a2225cc95032ce77066b7aeca9e2efc" }

[language-server.pylsp.config.pylsp]
plugins.ruff.enabled = true
plugins.black.enabled = true

[[language]]
name = "nix"
scope = "source.nix"
injection-regex = "nix"
file-types = ["nix"]
shebangs = []
comment-token = "#"
language-servers = ["nil", "nixd"]
indent = { tab-width = 2, unit = "  " }

[[grammar]]
name = "nix"
source = { git = "https://github.com/nix-community/tree-sitter-nix", rev = "1b69cf1fa92366eefbe6863c184e5d2ece5f187d" }

[[language]]
name = "bash"
scope = "source.bash"
injection-regex = "(shell|bash|zsh|sh)"
file-types = [
    "sh",
    "bash",
    "ash",
    "dash",
    "ksh",
    "mksh",
    "zsh",
    "zshenv",
    "zlogin",
    "zlogout",
    "zprofile",
    "zshrc",
    "eclass",
    "ebuild",
    "bazelrc",
    "Renviron",
    "zsh-theme",
    "cshrc",
    "tcshrc",
    "bashrc_Apple_Terminal",
    "zshrc_Apple_Terminal",
    { glob = "i3/config" },
    { glob = "sway/config" },
    { glob = "tmux.conf" },
    { glob = ".bash_history" },
    { glob = ".bash_login" },
    { glob = ".bash_logout" },
    { glob = ".bash_profile" },
    { glob = ".bashrc" },
    { glob = ".profile" },
    { glob = ".zshenv" },
    { glob = ".zlogin" },
    { glob = ".zlogout" },
    { glob = ".zprofile" },
    { glob = ".zshrc" },
    { glob = ".zimrc" },
    { glob = "APKBUILD" },
    { glob = ".bash_aliases" },
    { glob = ".Renviron" },
    { glob = ".xprofile" },
    { glob = ".xsession" },
    { glob = ".xsessionrc" },
    { glob = ".yashrc" },
    { glob = ".yash_profile" },
    { glob = ".hushlogin" },
]
shebangs = ["sh", "bash", "dash", "zsh"]
comment-token = "#"
language-servers = ["bash-language-server"]
indent = { tab-width = 2, unit = "  " }

[[grammar]]
name = "bash"
source = { git = "https://github.com/tree-sitter/tree-sitter-bash", rev = "487734f87fd87118028a65a4599352fa99c9cde8" }

[[language]]
name = "php"
scope = "source.php"
injection-regex = "php"
file-types = ["php", "inc", "php4", "php5", "phtml", "ctp"]
shebangs = ["php"]
roots = ["composer.json", "index.php"]
comment-token = "//"
block-comment-tokens = [
    { start = "/**", end = "*/" },
    { start = "/*", end = "*/" },
]
language-servers = ["intelephense"]
indent = { tab-width = 4, unit = "    " }

[[grammar]]
name = "php"
source = { git = "https://github.com/tree-sitter/tree-sitter-php", rev = "f860e598194f4a71747f91789bf536b393ad4a56" }

[[language]]
name = "php-only"
scope = "source.php-only"
injection-regex = "php-only"
file-types = []
indent = { tab-width = 4, unit = "    " }
roots = ["composer.json", "index.php"]

[[grammar]]
name = "php-only"
source = { git = "https://github.com/tree-sitter/tree-sitter-php", rev = "cf1f4a0f1c01c705c1d6cf992b104028d5df0b53", subpath = "php_only" }

[[language]]
name = "lua"
injection-regex = "lua"
scope = "source.lua"
file-types = ["lua", "rockspec"]
shebangs = ["lua", "luajit"]
roots = [".luarc.json", ".luacheckrc", ".stylua.toml", "selene.toml", ".git"]
comment-token = "--"
block-comment-tokens = { start = "--[[", end = "--]]" }
indent = { tab-width = 2, unit = "  " }
language-servers = ["lua-language-server"]

[[grammar]]
name = "lua"
source = { git = "https://github.com/tree-sitter-grammars/tree-sitter-lua", rev = "88e446476a1e97a8724dff7a23e2d709855077f2" }

[[language]]
name = "vue"
scope = "source.vue"
injection-regex = "vue"
file-types = ["vue"]
roots = ["package.json"]
block-comment-tokens = { start = "<!--", end = "-->" }
indent = { tab-width = 2, unit = "  " }
language-servers = ["vuels"]

[[grammar]]
name = "vue"
source = { git = "https://github.com/ikatyang/tree-sitter-vue", rev = "91fe2754796cd8fba5f229505a23fa08f3546c06" }

[[language]]
name = "yaml"
scope = "source.yaml"
file-types = [
    "yml",
    "yaml",
    { glob = ".prettierrc" },
    { glob = ".clangd" },
    { glob = ".clang-format" },
    { glob = ".clang-tidy" },
    "sublime-syntax",
]
comment-token = "#"
indent = { tab-width = 2, unit = "  " }
language-servers = ["yaml-language-server", "ansible-language-server"]
injection-regex = "yml|yaml"

[[grammar]]
name = "yaml"
source = { git = "https://github.com/ikatyang/tree-sitter-yaml", rev = "0e36bed171768908f331ff7dff9d956bae016efb" }

[[language]]
name = "cmake"
scope = "source.cmake"
file-types = ["cmake", { glob = "CMakeLists.txt" }]
comment-token = "#"
block-comment-tokens = { start = "#[[", end = "]]" }
indent = { tab-width = 2, unit = "  " }
language-servers = ["cmake-language-server"]
injection-regex = "cmake"

[[grammar]]
name = "cmake"
source = { git = "https://github.com/uyha/tree-sitter-cmake", rev = "6e51463ef3052dd3b328322c22172eda093727ad" }

[[language]]
name = "make"
scope = "source.make"
file-types = [
    { glob = "Makefile" },
    { glob = "makefile" },
    "make",
    "mk",
    "mak",
    { glob = "GNUmakefile" },
    { glob = "OCamlMakefile" },
]
shebangs = ["make", "gmake"]
injection-regex = "(make|makefile|Makefile|mk)"
comment-token = "#"
indent = { tab-width = 4, unit = "\t" }

[[grammar]]
name = "make"
source = { git = "https://github.com/alemuller/tree-sitter-make", rev = "a4b9187417d6be349ee5fd4b6e77b4172c6827dd" }

[[language]]
name = "markdown"
scope = "source.md"
injection-regex = "md|markdown"
file-types = [
    "md",
    "livemd",
    "markdown",
    "mdx",
    "mkd",
    "mkdn",
    "mdwn",
    "mdown",
    "markdn",
    "mdtxt",
    "mdtext",
    "workbook",
    { glob = "PULLREQ_EDITMSG" },
]
roots = [".marksman.toml"]
language-servers = ["marksman", "markdown-oxide"]
indent = { tab-width = 2, unit = "  " }
block-comment-tokens = { start = "<!--", end = "-->" }

[[grammar]]
name = "markdown"
source = { git = "https://github.com/tree-sitter-grammars/tree-sitter-markdown", rev = "62516e8c78380e3b51d5b55727995d2c511436d8", subpath = "tree-sitter-markdown" }

[[language]]
name = "markdown.inline"
scope = "source.markdown.inline"
injection-regex = "markdown\\.inline"
file-types = []
grammar = "markdown_inline"

[[grammar]]
name = "markdown_inline"
source = { git = "https://github.com/tree-sitter-grammars/tree-sitter-markdown", rev = "62516e8c78380e3b51d5b55727995d2c511436d8", subpath = "tree-sitter-markdown-inline" }

[[language]]
name = "dockerfile"
scope = "source.dockerfile"
injection-regex = "docker|dockerfile"
roots = ["Dockerfile", "Containerfile"]
file-types = [
    "Dockerfile",
    { glob = "Dockerfile" },
    { glob = "Dockerfile.*" },
    "dockerfile",
    { glob = "dockerfile" },
    { glob = "dockerfile.*" },
    "Containerfile",
    { glob = "Containerfile" },
    { glob = "Containerfile.*" },
    "containerfile",
    { glob = "containerfile" },
    { glob = "containerfile.*" },
]
comment-token = "#"
indent = { tab-width = 2, unit = "  " }
language-servers = ["docker-langserver"]

[[grammar]]
name = "dockerfile"
source = { git = "https://github.com/camdencheek/tree-sitter-dockerfile", rev = "087daa20438a6cc01fa5e6fe6906d77c869d19fe" }

[[language]]
name = "docker-compose"
scope = "source.yaml.docker-compose"
roots = ["docker-compose.yaml", "docker-compose.yml"]
language-servers = ["docker-compose-langserver", "yaml-language-server"]
file-types = [{ glob = "docker-compose.yaml" }, { glob = "docker-compose.yml" }]
comment-token = "#"
indent = { tab-width = 2, unit = "  " }
grammar = "yaml"

[[language]]
name = "git-commit"
scope = "git.commitmsg"
file-types = [{ glob = "COMMIT_EDITMSG" }, { glob = "MERGE_MSG" }]
comment-token = "#"
indent = { tab-width = 2, unit = "  " }
rulers = [51, 73]
text-width = 72

[[grammar]]
name = "git-commit"
source = { git = "https://github.com/the-mikedavis/tree-sitter-git-commit", rev = "6f193a66e9aa872760823dff020960c6cedc37b3" }

[[language]]
name = "diff"
scope = "source.diff"
file-types = ["diff", "patch", "rej"]
injection-regex = "diff"
comment-token = "#"
indent = { tab-width = 2, unit = "  " }

[[grammar]]
name = "diff"
source = { git = "https://github.com/the-mikedavis/tree-sitter-diff", rev = "fd74c78fa88a20085dbc7bbeaba066f4d1692b63" }

[[language]]
name = "git-rebase"
scope = "source.gitrebase"
file-types = [{ glob = "git-rebase-todo" }]
injection-regex = "git-rebase"
comment-token = "#"
indent = { tab-width = 2, unit = "\t" }

[[grammar]]
name = "git-rebase"
source = { git = "https://github.com/the-mikedavis/tree-sitter-git-rebase", rev = "d8a4207ebbc47bd78bacdf48f883db58283f9fd8" }

[[language]]
name = "regex"
scope = "source.regex"
injection-regex = "regex"
file-types = ["regex", { glob = ".Rbuildignore" }]

[[grammar]]
name = "regex"
source = { git = "https://github.com/tree-sitter/tree-sitter-regex", rev = "e1cfca3c79896ff79842f057ea13e529b66af636" }

[[language]]
name = "git-config"
scope = "source.gitconfig"
file-types = [
    "gitconfig",
    { glob = ".gitmodules" },
    { glob = ".gitconfig" },
    { glob = ".git/config" },
    { glob = ".config/git/config" },
]
injection-regex = "git-config"
comment-token = "#"
indent = { tab-width = 4, unit = "\t" }

[[grammar]]
name = "git-config"
source = { git = "https://github.com/the-mikedavis/tree-sitter-git-config", rev = "9c2a1b7894e6d9eedfe99805b829b4ecd871375e" }

[[language]]
name = "git-attributes"
scope = "source.gitattributes"
file-types = [{ glob = ".gitattributes" }]
injection-regex = "git-attributes"
comment-token = "#"
grammar = "gitattributes"

[[grammar]]
name = "gitattributes"
source = { git = "https://github.com/mtoohey31/tree-sitter-gitattributes", rev = "3dd50808e3096f93dccd5e9dc7dc3dba2eb12dc4" }

[[language]]
name = "git-ignore"
scope = "source.gitignore"
file-types = [
    { glob = ".gitignore_global" },
    { glob = "git/ignore" },
    { glob = ".ignore" },
    { glob = "CODEOWNERS" },
    { glob = ".config/helix/ignore" },
    { glob = ".helix/ignore" },
    { glob = ".*ignore" },
    { glob = ".git-blame-ignore-revs" },
]
injection-regex = "git-ignore"
comment-token = "#"
grammar = "gitignore"

[[grammar]]
name = "gitignore"
source = { git = "https://github.com/shunsambongi/tree-sitter-gitignore", rev = "f4685bf11ac466dd278449bcfe5fd014e94aa504" }

[[language]]
name = "graphql"
scope = "source.graphql"
injection-regex = "graphql"
file-types = ["gql", "graphql", "graphqls"]
language-servers = ["graphql-language-service"]
comment-token = "#"
block-comment-tokens = { start = "\"\"\"", end = "\"\"\"" }
indent = { tab-width = 2, unit = "  " }

[[grammar]]
name = "graphql"
source = { git = "https://github.com/bkegley/tree-sitter-graphql", rev = "5e66e961eee421786bdda8495ed1db045e06b5fe" }

[[language]]
name = "hcl"
scope = "source.hcl"
injection-regex = "(hcl|tf|nomad)"
language-id = "terraform"
file-types = ["hcl", "tf", "nomad"]
comment-token = "#"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { tab-width = 2, unit = "  " }
language-servers = ["terraform-ls"]
auto-format = true

[[grammar]]
name = "hcl"
source = { git = "https://github.com/tree-sitter-grammars/tree-sitter-hcl", rev = "9e3ec9848f28d26845ba300fd73c740459b83e9b" }

[[language]]
name = "tfvars"
scope = "source.tfvars"
language-id = "terraform-vars"
file-types = ["tfvars"]
comment-token = "#"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { tab-width = 2, unit = "  " }
language-servers = ["terraform-ls"]
auto-format = true
grammar = "hcl"

[[language]]
name = "sql"
scope = "source.sql"
file-types = ["sql", "dsql"]
comment-token = "--"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { tab-width = 4, unit = "    " }
injection-regex = "sql"

[[grammar]]
name = "sql"
source = { git = "https://github.com/DerekStride/tree-sitter-sql", rev = "b9d109588d5b5ed986c857464830c2f0bef53f18" }

[[language]]
name = "sshclientconfig"
scope = "source.sshclientconfig"
file-types = [
    { glob = ".ssh/config" },
    { glob = "/etc/ssh/ssh_config" },
    { glob = "ssh_config.d/*.conf" },
]
comment-token = "#"

[[grammar]]
name = "sshclientconfig"
source = { git = "https://github.com/metio/tree-sitter-ssh-client-config", rev = "e45c6d5c71657344d4ecaf87dafae7736f776c57" }

[[language]]
name = "prisma"
scope = "source.prisma"
injection-regex = "prisma"
file-types = ["prisma"]
roots = ["package.json"]
comment-token = "//"
language-servers = ["prisma-language-server"]
indent = { tab-width = 2, unit = "  " }

[[grammar]]
name = "prisma"
source = { git = "https://github.com/victorhqc/tree-sitter-prisma", rev = "eca2596a355b1a9952b4f80f8f9caed300a272b5" }

[[language]]
name = "dot"
scope = "source.dot"
injection-regex = "dot"
file-types = ["dot"]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { tab-width = 4, unit = "    " }
language-servers = ["dot-language-server"]

[[grammar]]
name = "dot"
source = { git = "https://github.com/rydesun/tree-sitter-dot", rev = "917230743aa10f45a408fea2ddb54bbbf5fbe7b7" }

[[language]]
name = "jsonnet"
scope = "source.jsonnet"
file-types = ["libsonnet", "jsonnet"]
roots = ["jsonnetfile.json"]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { tab-width = 2, unit = "  " }
language-servers = ["jsonnet-language-server"]

[[grammar]]
name = "jsonnet"
source = { git = "https://github.com/sourcegraph/tree-sitter-jsonnet", rev = "0475a5017ad7dc84845d1d33187f2321abcb261d" }

[[language]]
name = "xml"
scope = "source.xml"
injection-regex = "xml"
file-types = [
    "xml",
    "mobileconfig",
    "plist",
    "xib",
    "storyboard",
    "svg",
    "xsd",
    "gml",
    "xaml",
    "gir",
    "rss",
    "atom",
    "opml",
    "policy",
    "ascx",
    "axml",
    "axaml",
    "bpmn",
    "cpt",
    "csl",
    "csproj.user",
    "dita",
    "ditamap",
    "dtml",
    "fxml",
    "iml",
    "isml",
    "jmx",
    "launch",
    "menu",
    "mxml",
    "nuspec",
    "osc",
    "osm",
    "pt",
    "publishsettings",
    "pubxml",
    "pubxml.user",
    "rbxlx",
    "rbxmx",
    "rng",
    "shproj",
    "tld",
    { glob = "*.tm[Tt]heme" },
    "tmx",
    "vbproj.user",
    "vcxproj",
    "vcxproj.filters",
    "wsdl",
    "wxi",
    "wxs",
    "xbl",
    "xlf",
    "xliff",
    "xpdl",
    "xul",
    "xoml",
    "musicxml",
    "glif",
    "ui",
    "sublime-snippet",
    "xsl",
    "mpd",
    "smil",
]
block-comment-tokens = { start = "<!--", end = "-->" }
indent = { tab-width = 2, unit = "  " }

[language.auto-pairs]
'(' = ')'
'{' = '}'
'[' = ']'
'"' = '"'
"'" = "'"
"<" = ">"

[[grammar]]
name = "xml"
source = { git = "https://github.com/RenjiSann/tree-sitter-xml", rev = "48a7c2b6fb9d515577e115e6788937e837815651" }

[[language]]
name = "env"
scope = "source.env"
file-types = [
    { glob = ".env" },
    { glob = ".env.*" },
    { glob = ".envrc" },
    { glob = ".envrc.*" },
]
injection-regex = "env"
comment-token = "#"
indent = { tab-width = 4, unit = "\t" }
grammar = "bash"

[[language]]
name = "ini"
scope = "source.ini"
file-types = [
    "ini",
    # Systemd unit files
    "service",
    "automount",
    "desktop",
    "device",
    "mount",
    "nspawn",
    "path",
    "scope",
    "slice",
    "socket",
    "swap",
    "target",
    "timer",
    { glob = "systemd/**/*.conf" },
    # Podman quadlets
    "container",
    "volume",
    "kube",
    "network",
    { glob = ".editorconfig" },
    { glob = ".npmrc" },
    { glob = "hgrc" },
    { glob = "npmrc" },
    { glob = "rclone.conf" },
    "properties",
    "cfg",
    "directory",
]
injection-regex = "ini"
comment-token = "#"
indent = { tab-width = 4, unit = "\t" }

[[grammar]]
name = "ini"
source = { git = "https://github.com/justinmk/tree-sitter-ini", rev = "32b31863f222bf22eb43b07d4e9be8017e36fb31" }

[[language]]
name = "bicep"
scope = "source.bicep"
file-types = ["bicep", "bicepparam"]
auto-format = true
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { tab-width = 2, unit = " " }
language-servers = ["bicep-langserver"]

[[grammar]]
name = "bicep"
source = { git = "https://github.com/tree-sitter-grammars/tree-sitter-bicep", rev = "0092c7d1bd6bb22ce0a6f78497d50ea2b87f19c0" }

[[language]]
name = "msbuild"
scope = "source.msbuild"
injection-regex = "msbuild"
file-types = ["proj", "vbproj", "csproj", "fsproj", "targets", "props"]
indent = { tab-width = 2, unit = "  " }
block-comment-tokens = { start = "<!--", end = "-->" }
grammar = "xml"

[language.auto-pairs]
'(' = ')'
'{' = '}'
'[' = ']'
'"' = '"'
"'" = "'"
"<" = ">"

[[language]]
name = "pem"
scope = "source.pem"
file-types = ["pem", "cert", "crt"]
injection-regex = "pem"
grammar = "pem"

[[grammar]]
name = "pem"
source = { git = "https://github.com/mtoohey31/tree-sitter-pem", rev = "be67a4330a1aa507c7297bc322204f936ec1132c" }

[[language]]
name = "passwd"
scope = "source.passwd"
file-types = [{ glob = "passwd" }]

[[grammar]]
name = "passwd"
source = { git = "https://github.com/ath3/tree-sitter-passwd", rev = "20239395eacdc2e0923a7e5683ad3605aee7b716" }

[[language]]
name = "hosts"
scope = "source.hosts"
file-types = [{ glob = "hosts" }]
comment-token = "#"

[[grammar]]
name = "hosts"
source = { git = "https://github.com/ath3/tree-sitter-hosts", rev = "301b9379ce7dfc8bdbe2c2699a6887dcb73953f9" }

[[language]]
name = "jinja"
scope = "text.html.jinja"
injection-regex = "jinja"
file-types = ["jinja", "jinja2", "j2"]
indent = { tab-width = 2, unit = "  " }
grammar = "jinja2"
block-comment-tokens = { start = "{#", end = "#}" }

[[grammar]]
name = "jinja2"
source = { git = "https://github.com/varpeti/tree-sitter-jinja2", rev = "a533cd3c33aea6acb0f9bf9a56f35dcfe6a8eb53" }

[[language]]
name = "jq"
scope = "source.jq"
injection-regex = "jq"
file-types = ["jq"]
comment-token = "#"
language-servers = ["jq-lsp"]
indent = { tab-width = 2, unit = "  " }

[[grammar]]
name = "jq"
source = { git = "https://github.com/flurie/tree-sitter-jq", rev = "13990f530e8e6709b7978503da9bc8701d366791" }

[[language]]
name = "todotxt"
scope = "text.todotxt"
# glob = "todo.txt" is too common and can conflict regular files, define in user config if necessary
file-types = [{ glob = "*.todo.txt" }, "todotxt"]
formatter = { command = "sort" }
auto-format = true

[[grammar]]
name = "todotxt"
source = { git = "https://github.com/arnarg/tree-sitter-todotxt", rev = "3937c5cd105ec4127448651a21aef45f52d19609" }

[[language]]
name = "templ"
scope = "source.templ"
file-types = ["templ"]
roots = ["go.work", "go.mod"]
comment-token = "//"
indent = { tab-width = 2, unit = "  " }
language-servers = ["templ"]

[[grammar]]
name = "templ"
source = { git = "https://github.com/vrischmann/tree-sitter-templ", rev = "db662414ccd6f7c78b1e834e7abe11c224b04759" }

[[language]]
name = "log"
scope = "source.log"
file-types = ["log"]

[[grammar]]
name = "log"
source = { git = "https://github.com/Tudyx/tree-sitter-log", rev = "62cfe307e942af3417171243b599cc7deac5eab9" }

[[language]]
name = "powershell"
scope = "source.powershell"
injection-regex = "(pwsh|powershell)"
file-types = ["ps1", "psm1", "psd1", "pscc", "psrc"]
shebangs = ["pwsh", "powershell"]
comment-token = '#'
block-comment-tokens = { start = "<#", end = "#>" }
indent = { tab-width = 4, unit = "    " }

[[grammar]]
name = "powershell"
source = { git = "https://github.com/airbus-cert/tree-sitter-powershell", rev = "c9316be0faca5d5b9fd3b57350de650755f42dc0" }

[[language]]
name = "pkgbuild"
scope = "source.bash"
file-types = [{ glob = "PKGBUILD" }]
comment-token = "#"
grammar = "bash"
language-servers = [
    "termux-language-server",
    { except-features = [
        "diagnostics",
    ], name = "bash-language-server" },
]

[[language]]
name = "helm"
grammar = "gotmpl"
scope = "source.helm"
roots = ["Chart.yaml"]
comment-token = "#"
language-servers = ["helm_ls"]
file-types = [
    { glob = "templates/*.yaml" },
    { glob = "templates/*.yml" },
    { glob = "templates/_*.tpl" },
    { glob = "templates/NOTES.txt" },
]

[[language]]
name = "nginx"
scope = "source.nginx"
injection-regex = "nginx"
file-types = [
    { glob = "sites-available/*.conf" },
    { glob = "sites-enabled/*.conf" },
    { glob = "nginx.conf" },
    { glob = "conf.d/*.conf" },
]
roots = ["nginx.conf"]
comment-token = "#"
indent = { tab-width = 4, unit = "    " }

[[grammar]]
name = "nginx"
source = { git = "https://gitlab.com/joncoole/tree-sitter-nginx", rev = "b4b61db443602b69410ab469c122c01b1e685aa0" }

[[language]]
name = "ghostty"
scope = "source.ghostty"
file-types = [{ glob = "ghostty/config" }]
comment-tokens = "#"
indent = { tab-width = 2, unit = "  " }

[[grammar]]
name = "ghostty"
source = { git = "https://github.com/bezhermoso/tree-sitter-ghostty", rev = "8438a93b44367e962b2ea3a3b6511885bebd196a" }

[[language]]
name = "tera"
scope = "source.tera"
file-types = ["tera"]
block-comment-tokens = [
    { start = "{#", end = "#}" },
    { start = "{#-", end = "-#}" },
    { start = "{#", end = "-#}" },
    { start = "{#-", end = "#}" },
]
indent = { tab-width = 4, unit = "    " }

[[language]]
name = "csv"
file-types = ["csv"]
scope = "source.csv"

[[grammar]]
name = "csv"
source = { git = "https://github.com/weartist/rainbow-csv-tree-sitter", rev = "d3dbf916446131417e4c2ea9eb8591b23b466d27" }

[[language]]
name = "debian"
scope = "text.debian"
file-types = [
    "dsc",
    "changes",
    { glob = "debian/**/control" },
    { glob = "etc/apt/sources.list.d/*.sources" },
]
comment-tokens = "#"

[[grammar]]
name = "debian"
source = { git = "https://gitlab.com/MggMuggins/tree-sitter-debian", rev = "9b3f4b78c45aab8a2f25a5f9e7bbc00995bc3dde" }
